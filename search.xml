<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>2018-7-25java快排学习</title>
      <link href="/2018/07/25/java%E5%BF%AB%E6%8E%92%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/07/25/java%E5%BF%AB%E6%8E%92%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<h2 id="快速排列算法学习"><a href="#快速排列算法学习" class="headerlink" title="快速排列算法学习"></a>快速排列算法学习</h2><h3 id="数学原理"><a href="#数学原理" class="headerlink" title="数学原理:"></a>数学原理:</h3><blockquote><blockquote><p>设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用第一个数据）作为关键数据，然后将所有比它小的数都放到它前面，所有比它大的数都放到它后面，这个过程称为一趟快速排序。一趟快速排序的算法是</p><blockquote><p> 　　1）设置两个变量I、J，排序开始的时候：I=0，J=N-1； 　　<br> 　　2）以第一个数组元素作为关键数据，赋值给X，即 X=A[0]； 　　<br> 　　3）从J开始向前搜索，即由后开始向前搜索（J=J-1），找到第一个小于X的值，让该值与X交换； 　　4）从I开始向后搜索，即由前开始向后搜索（I=I+1），找到第一个大于X的值，让该值与X交换<br> 　　5）重复第3、4步，直到 I=J；</p></blockquote></blockquote></blockquote><h2 id="具体例子"><a href="#具体例子" class="headerlink" title="具体例子"></a>具体例子</h2><p><code>49(X) 38 65 97 76 13 27</code></p><h4 id="首先设置关键值X-我是将49看作关键"><a href="#首先设置关键值X-我是将49看作关键" class="headerlink" title="首先设置关键值X 我是将49看作关键"></a>首先设置关键值X 我是将49看作关键</h4><p>经过第一次转换<br><code>27 38 65 97 76 13 49(X)</code><br><code>27 38 49(X) 97 76 13 65</code><br><code>27 38 13 97 76 49(X) 65</code><br><code>27 38 13 49(X) 76 97 65</code></p><hr><h3 id="因为可以看到此时I-J"><a href="#因为可以看到此时I-J" class="headerlink" title="因为可以看到此时I=J"></a>因为可以看到此时I=J</h3><p>所以将49隔离也就成了如下样子<br><code>27 38 13 |49| 76 97 65</code><br><strong>然后左右分别执行快排</strong><br>最后就得出了:<br><code>13 27 38 |49| 65 76 97</code><br>至此快排完成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSortTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">qSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> head, <span class="keyword">int</span> tail)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head &gt;= tail || arr == <span class="keyword">null</span> || arr.length &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//设置特殊情况</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = head,j =tail, pivot = arr[(head + tail) / <span class="number">2</span>];</span><br><span class="line">        <span class="comment">//执行步骤3</span></span><br><span class="line">        <span class="keyword">while</span>(head &lt;= j)&#123;</span><br><span class="line">            <span class="keyword">while</span>(arr[i] &lt; pivot)&#123;</span><br><span class="line">                ++i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(arr[j] &lt; pivot)&#123;</span><br><span class="line">                --j;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; j)&#123;<span class="comment">//判断是否满足排序条件</span></span><br><span class="line">                <span class="keyword">int</span> t = arr[i];</span><br><span class="line">                arr[i] = arr[j];</span><br><span class="line">                arr[j] = t;</span><br><span class="line">                ++i;</span><br><span class="line">                --j;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == j)&#123;<span class="comment">//满足第一次排序算法的结束条件</span></span><br><span class="line">                ++i;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        qSort(arr, head, j);</span><br><span class="line">        qSort(arr, i, tail);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">49</span>, <span class="number">38</span>, <span class="number">65</span>, <span class="number">97</span>, <span class="number">76</span>, <span class="number">13</span>, <span class="number">27</span>&#125;;</span><br><span class="line">        qSort(array, <span class="number">0</span>,array.length -<span class="number">1</span>);</span><br><span class="line">        String out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> digit : array) &#123;</span><br><span class="line">            out += (digit + <span class="string">","</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(out);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 学习笔记,java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018-7-19 Java编程思想学习</title>
      <link href="/2018/07/20/%E9%9A%8F%E7%AC%94%E5%B0%8F%E8%AE%B0/"/>
      <url>/2018/07/20/%E9%9A%8F%E7%AC%94%E5%B0%8F%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="最好不要用private-static可能造成内存泄漏"><a href="#最好不要用private-static可能造成内存泄漏" class="headerlink" title="最好不要用private static可能造成内存泄漏"></a>最好不要用private static可能造成内存泄漏</h3><hr><h3 id="java没有goto语句但是可以用-label-代替-但是不涉及到底层硬件编程最好别用"><a href="#java没有goto语句但是可以用-label-代替-但是不涉及到底层硬件编程最好别用" class="headerlink" title="java没有goto语句但是可以用 label: 代替 但是不涉及到底层硬件编程最好别用"></a>java没有goto语句但是可以用 label: 代替 但是不涉及到底层硬件编程最好别用</h3><hr><h2 id="区分java的重载的几种方法"><a href="#区分java的重载的几种方法" class="headerlink" title="区分java的重载的几种方法"></a>区分java的重载的几种方法</h2><p>1 通过方法所传参数的区别</p><p>2 通过方法所传参数的顺序</p><p>3 通过方法所传参数的返回值</p><hr><p><strong>Java中对象可能不被垃圾回收 垃圾回收并不等于析构</strong></p><p><strong>垃圾回收机制不等于所有对象都释放了内存</strong></p><p><strong>finalize我不太懂</strong></p><hr><p><strong>内部类</strong> <del>233</del><br>每个内部类都能独立地继承自一个接口的实现,所以无论外围类是否已经继承了某个接口的实现,对于内部类没有影响.</p><h2 id="内部类不能通过外部类继承后重新定义而覆盖"><a href="#内部类不能通过外部类继承后重新定义而覆盖" class="headerlink" title="内部类不能通过外部类继承后重新定义而覆盖"></a>内部类不能通过外部类继承后重新定义而覆盖</h2><p><strong>持有对象这一节得有空重看 再就是内部类</strong><del>313</del></p>]]></content>
      
      
        <tags>
            
            <tag> Java编程思想,学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018-7-20 Java编程思想学习</title>
      <link href="/2018/07/20/Java%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E5%BC%82%E5%B8%B8%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/07/20/Java%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E5%BC%82%E5%B8%B8%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h2 id="Java异常的学习"><a href="#Java异常的学习" class="headerlink" title="Java异常的学习"></a>Java异常的学习</h2><h3 id="异常使用指南"><a href="#异常使用指南" class="headerlink" title="异常使用指南"></a>异常使用指南</h3><p><strong>在以下情况下使用异常</strong></p><ol><li>在恰当的级别处理问题</li><li>解决问题并且重新调用产生异常的方法</li><li>进行少许修补,然后绕过异常发生的地方继续执行</li><li>用别的数据进行计算,以代替方法预计会返回的值</li><li>把当前运行环境下能做的事情尽量做完,然后将相同的异常抛到更高层</li><li>把当前运行环境下能做的事情尽量昨晚,然后把不相同的异常抛到更高层</li><li>终止程序</li><li>进行简化</li><li>让类库和程序更加安全</li></ol>]]></content>
      
      
        <tags>
            
            <tag> Java编程思想,学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/07/20/hello-world/"/>
      <url>/2018/07/20/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
